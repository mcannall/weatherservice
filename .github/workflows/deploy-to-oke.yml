name: Deploy to Oracle Kubernetes Engine

on:
  push:
    branches: [ main ]
    paths:
      - 'api/**'
      - 'route-weather-planner/**'
      - 'k8s/**'
      - '.github/workflows/deploy-to-oke.yml'
  workflow_run:
    workflows: 
      - "Build and Push Docker Image"
      - "Route Weather Planner CI/CD"
    types:
      - completed

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  deploy:
    name: Deploy to OKE
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'push' }}

    permissions:
      contents: read
      packages: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install OCI CLI
        run: |
          curl -L -O https://raw.githubusercontent.com/oracle/oci-cli/master/scripts/install/install.sh
          chmod +x install.sh
          ./install.sh --accept-all-defaults
          echo "$HOME/oracle-cli/bin" >> $GITHUB_PATH

      - name: Configure OCI CLI
        env:
          OCI_CLI_USER: ${{ secrets.OCI_CLI_USER }}
          OCI_CLI_TENANCY: ${{ secrets.OCI_CLI_TENANCY }}
          OCI_CLI_FINGERPRINT: ${{ secrets.OCI_CLI_FINGERPRINT }}
          OCI_CLI_KEY_CONTENT: ${{ secrets.OCI_PRIVATE_KEY }}
          OCI_CLI_REGION: ${{ secrets.OCI_REGION }}
        run: |
          mkdir -p ~/.oci
          # Create config file
          cat > ~/.oci/config << EOF
          [DEFAULT]
          user=$OCI_CLI_USER
          fingerprint=$OCI_CLI_FINGERPRINT
          tenancy=$OCI_CLI_TENANCY
          region=$OCI_CLI_REGION
          EOF
          # Save private key
          echo "$OCI_CLI_KEY_CONTENT" > ~/.oci/oci_api_key.pem
          chmod 600 ~/.oci/oci_api_key.pem
          chmod 600 ~/.oci/config

      - name: Configure kubectl
        run: |
          oci ce cluster create-kubeconfig \
            --cluster-id ${{ secrets.OCI_CLUSTER_ID }} \
            --file $HOME/.kube/config \
            --region ${{ secrets.OCI_REGION }} \
            --token-version 2.0.0
          chmod 600 $HOME/.kube/config

      - name: Create secrets
        run: |
          # Create or update the secrets
          kubectl create secret generic weatherservice-secrets \
            --from-literal=OPENWEATHERMAP_API_KEY=${{ secrets.OPENWEATHERMAP_API_KEY }} \
            --from-literal=GOOGLE_MAPS_API_KEY=${{ secrets.GOOGLE_MAPS_API_KEY }} \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Update Kubernetes Deployments
        run: |
          # Update image pull policy and registry paths in deployment
          sed -i 's|imagePullPolicy: Never|imagePullPolicy: Always|g' k8s/deployment.yaml
          sed -i "s|image: ghcr.io/mcannall/weatherservice:latest|image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest|g" k8s/deployment.yaml
          sed -i "s|image: ghcr.io/mcannall/weatherservice/route-weather-planner:latest|image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/route-weather-planner:latest|g" k8s/deployment.yaml
          
          # Apply Kubernetes configurations
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml

      - name: Wait for deployments
        run: |
          kubectl rollout status deployment/weather-api
          kubectl rollout status deployment/route-planner

      - name: Get Service URLs
        run: |
          echo "Services are available at:"
          echo "Weather API (internal):"
          kubectl get service weather-api-service -o wide
          echo "Route Planner (external):"
          kubectl get service route-planner-service -o wide 
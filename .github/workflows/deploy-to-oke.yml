name: Deploy to Oracle Kubernetes Engine

on:
  workflow_run:
    workflows: 
      - "Route Weather Planner CI/CD"
    types:
      - completed
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  deploy:
    name: Deploy to OKE
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    permissions:
      contents: read
      packages: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha }}

      - name: Configure Oracle Cloud Infrastructure CLI
        uses: oracle-actions/configure-cli@v1
        with:
          auth_type: api_key
          user_id: ${{ secrets.OCI_CLI_USER }}
          fingerprint: ${{ secrets.OCI_CLI_FINGERPRINT }}
          tenancy: ${{ secrets.OCI_CLI_TENANCY }}
          region: ${{ secrets.OCI_REGION }}
          private_key: ${{ secrets.OCI_PRIVATE_KEY }}

      - name: Configure kubectl
        run: |
          oci ce cluster create-kubeconfig \
            --cluster-id ${{ secrets.OCI_CLUSTER_ID }} \
            --file $HOME/.kube/config \
            --region ${{ secrets.OCI_REGION }} \
            --token-version 2.0.0
          chmod 600 $HOME/.kube/config

      - name: Create secrets
        run: |
          # Create or update the secrets
          kubectl create secret generic weatherservice-secrets \
            --from-literal=OPENWEATHERMAP_API_KEY=${{ secrets.OPENWEATHERMAP_API_KEY }} \
            --from-literal=GOOGLE_MAPS_API_KEY=${{ secrets.GOOGLE_MAPS_API_KEY }} \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Update Kubernetes Deployments
        run: |
          # Get the short SHA
          SHORT_SHA=$(echo ${{ github.event.workflow_run.head_sha }} | cut -c1-7)
          
          # Update deployments with correct image tags
          kubectl set image deployment/route-planner \
            route-planner=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/route-weather-planner:sha-$SHORT_SHA
          
          kubectl set image deployment/weather-api \
            api=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:sha-$SHORT_SHA

      - name: Wait for deployments
        run: |
          kubectl rollout status deployment/weather-api
          kubectl rollout status deployment/route-planner

      - name: Get Service URLs
        run: |
          echo "Services are available at:"
          echo "Weather API (internal):"
          kubectl get service weather-api-service -o wide
          echo "Route Planner (external):"
          kubectl get service route-planner-service -o wide 